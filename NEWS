Cassowary NEWS -- history of user-visible changes. -*- text -*-

Cassowary Constraint Solving Toolkit was
Implemented by:

Greg J. Badros <gjb@cs.washington.edu> and
Alan Borning <borning@cs.washington.edu>
University of Washington
Computer Science and Engineering
Seattle, WA 98195-2350

with Constraint Drawing Applet (CDA) by Michael Noth <noth@cs.washington.edu>


14-Sep-98, Changes since Cassowary v0.2 (for release v0.21)

* Make compile cleanly using egcs-1.1b -- use typename, and drop
  unused templated instantiation

* Improved guile interface: add a void pointer to the solver objects,
  and let the guile wrapper use it to keep a pointer to the scheme-level
  object;  also added clv-attach! and clv-attached-object for attaching
  an object to a cl-variable (somewhat redundant with guile's
  object properties)

* Wrap ClStayConstraints so they can be managed explicitly

* cl-add-stay, cl-add-editvar now take strength and factor arguments,
  instead  of a list of cl-vars

* Added weight option to addEditVar



6-Aug-98, Changes since Cassowary v0.1:

* Changes to the distribution for release v0.2

** added guile/scheme wrapper of C++ version

** mention SCWM in README

** mention non-maintenance of Smalltalk implementation unless we have users

* Changes to the C++ and Java implementations

** Fixed several bugs -- dummy variables were wrongly being pivoted into
   the basis, and constraints that threw required failure exceptions
   were mistakenly remaining in the tableau (now trying to remove an
   exception that was not added because of a required-failure exception
   will correctly throw a ConstraintNotFound exception); more -- see ChangeLog

** Added a virtual change_value function to permit applications to watch 
   for changes made to external variables.

* Changes to only the C++ version (Java version will catch up in 0.3)

** Added new test cases to ClTests, fixed bugs in ClTestColumns

** Added _pv (void *) field hanging off of ClConstraint and ClVariable
   for associating arbitrary structs with those (needed by SCWM)

** Permit nested beginEdit()s, and do the right thing upon calling
   endEdit() -- i.e., not all the edit variables are removed, only the
   nested ones

** Permit access to ClSimplexSolver::ConstraintMap() (used by
   guile-wrapper to efficiently get at a list of constraints in the
   solver)

** Added ExCLEditMisuse exception
