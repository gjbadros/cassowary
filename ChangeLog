Sat Sep 19 17:08:21 1998  Greg Badros  <gjb@cs.washington.edu>

	* c++/Makefile (CPPFLAGS): Added USE_GC, commented out, and added
	OTHER_LIBS variable for linking with the gc library

Sat Sep 19 17:01:16 1998  Greg Badros  <gjb@cs.washington.edu>

	* c++/ClTableau.h: Added AssertValid() for testing integrity of
	Tableau

	* c++/ClSymbolicWeight.h, c++/ClStrength.h, c++/ClSlackVariable.h,
	c++/ClLinearExpression.h, c++/ClErrors.h, c++/ClDummyVariable.h,
	c++/ClConstraint.h, c++/ClAbstractVariable.h:  Descend objects
	from "gc" class conditioned on USE_GC* pp macros

	* c++/Cassowary.h: Conditionally include gc_cpp.h ifdef USE_GC;
	added NEWVAR and DELVAR macros for outputting debug information at 
	new/delete sites

	* c++/ClSimplexSolver.h: Call AssertValid before solving

	* c++/ClSimplexSolver.cc: Remove memory leak of the artificial
	objective variable

	* c++/ClLinearExpression.h: Fix gdb_print to have a newline

	* c++/ClLeakTest: Added leakTest2 which more obviously leaks, and
	use GC_gcollect() to force a collect

Tue Sep 15 16:36:20 1998  Greg Badros  <gjb@cs.washington.edu>

	* c++/ClTableau.h, ClTableau.cc: Handle removing vars from _columns more
	carefully, and add gdb_print(), virtual destructor

	* c++/ClLinearExpression.h, c++/ClConstraint.h,
 	c++/ClAbstractVariable.h: Added gdb_print()

Wed Sep  9 09:46:35 1998  Greg Badros  <gjb@cs.washington.edu>

	* c++/ClLinearExpression.h, c++/ClLinearExpression.cc: added uses
	of 'typename' keyword as needed by egcs-1.1b's -pedantic (and the
	C++ FDIS)

Sun Sep  6 13:19:01 1998  Greg Badros  <gjb@cs.washington.edu>

	* c++/ClSimplexSolver.h: Added _pv field, and Pv() setPv() getter
	and setter
	
	* guile/cassowary_scm.cc: Use solver's _pv field to point
	ClSimplexSolver back at the scheme object that wraps it

Fri Sep  4 18:52:50 1998  Greg Badros  <gjb@cs.washington.edu>

	* guile/cassowary_scm.hpp, guile/cassowary_scm.cc: Added PvFromScm 
	and ScmFromPv to hide the reinterpret casts used to store a scheme 
	object as the void * Pv() attached to a cassowary object.  Attach
	the scheme-level cl-variable to a ClVariable object.  Added
	`clv-attach!' and `clv-attached-object' to manipulate the attached 
	object (often better to use scheme level properties, though)

Fri Sep  4 18:51:30 1998  Greg Badros  <gjb@cs.washington.edu>

	* guile/Makefile: Use "perl" from path to run extract docs instead 
	of relying on #! line, and generate the -procedures.txt file as
	well as the .sgml file

Wed Sep  2 17:08:14 1998  Greg Badros  <gjb@cs.washington.edu>

	* guile/cassowary_scm.cc, guile/cassowary_scm.hpp: Added
	ClStayConstraint wrapper.  Make cl-add-stay, cl-add-editvar take a 
	list of variables instead of a varargs last argument and instead
	add two optional arguments STRENGTH and FACTOR (thus those
	primitives remain backward compatible as long as only one variable 
	was given).

Wed Sep  2 13:55:37 1998  Greg Badros  <gjb@cs.washington.edu>

	* ClSimplexSolver.h: Added weight option to addEditVar and use it

	* ClLinearExpression.h: Added PconstClAbstractVariable, use it;
	use ClVarToCoeffMap in coefficientFor.

Thu Aug  6 20:56:45 1998  Greg Badros  <gjb@cs.washington.edu>

	* Release v0.2.

Thu Aug  6 20:41:40 1998  Greg Badros  <gjb@cs.washington.edu>

	* ClTests.cc: Added multiedit() test for testing nested
	  beginEdit-s

	* ClSimplexSolver.h, ClSimplexSolver.cc: Support nested
	  beginEdit-s -- use removeEditVarsTo(n), and rewrite
	  removeAllEditVars in terms of the former;  Use FIsSatisfied on
	  constraint and compare with testing internally for
	  FIsConstraintSatisfied() -- untested.

	* ClLinearInequality.h, ClLinearEquation.h, ClConstraint.h: Added
	  virtual FIsSatisfied

	* ClLinearExpression.h, ClLinearExpression.cc: Added evaluate()

	* ClAbstractVariable.h: Return 0 for value(), and make it a
	  virtual function.

Wed Aug  5 16:10:56 1998  Greg Badros  <gjb@cs.washington.edu>

	* ClStrength.h: Have ClStrength::symbolicWeight return a const
	  ref, instead of by value, make clsXXX const refs.

	* ClSimplexSolver.cc, ClLinearInequality.cc, ClLinearEquation.cc,
	  ClLinearConstraint.cc: Take ClStrengths by const refs

Tue Aug  4 15:22:08 1998  Greg Badros  <gjb@cs.washington.edu>

	* guile/cassowary_scm.cc, cassowary_scm.hpp: Move all inline
	  functions into .hpp file.  Added cl-is-constraint-satisfied?
	
	* ClTableau.h: Added a rowExpression() const memfn, for
	  FIsConstraintSatisfied()

	* ClSimplexSolver.h, ClSimplexSolver.cc: Added (probably broken)
	  FIsConstraintSatisfied(cn) memfn -- needs testing

Sun Aug  2 16:49:34 1998  Greg Badros  <gjb@cs.washington.edu>

	* ClSimplexSolver.h: Added ConstraintMap() accessor to
	_markerVars, for cl-constraint-list guile primitive

	* ClConstraint.h: Added setPv(), Pv(), and _pv field to a
	constraint, for attaching extra information.

Thu Jul 30 19:15:40 1998  Greg Badros  <gjb@cs.washington.edu>

	* ClTests.cc: Added simple2, to test new EditMisuse exception on
	editing a variable that is nowhere in the solver.

	* ClTableau.h, ClTableau.cc:  Be more careful about inserting into
	_externalParametricVars; add FIsBasicVar to assist that care.

	* ClSimplexSolver.cc, ClSimplexSolver.h: Added pfnCnSatCallback -- 
	does nothing for now;  throw an ExCLEditMisuse exception if an
	edit constraint is added on a variable that is not in the tableau
	(needs at least a stay constraint in the solver); replace some
	calls to rowExpression with FIsBasicVar when the latter is the
	intent.

Thu Jul 21  Greg Badros  <gjb@cs.washington.edu>

	* ClVariable.h, ClVariable.cc: Added _pv field, settor and gettor.

	
ABOVE CHANGES ONLY IN C++ IMPLEMENTATION AND ITS WRAPPERS
	
Fri Jul 17 19:24:54 1998  Greg Badros  <gjb@cs.washington.edu>

	* ClVariable.h, .java: Added change_value memfn, and make it virtual
 	instead of setValue -- thus subclasses can specialize behaviour
 	when the variable gets set by the solver.

	* ClSimplexSolver.h, .java: Use change_value for setEditedValue if
	the variable is not in the tableau;  call resolve() before
	removeAllEditVars in endEdit

	* ClSimplexSolver.cc, .java (setExternalVariables): Use change_value
	instead of set_value when so subclasses can override and notice a
	changed variable

Thu Jul 16 19:49:45 1998  Greg Badros  <gjb@cs.washington.edu>

	* Added setEditedValue(), FContainsVariable(), and addVar() to c++ 
	and Java implementations

	* Fixed bug in C++ and Java in solvers lacking stay constraints
 	that was due to not-updating the external parametric variables
 	set.

Fri Jul 10 09:00:15 1998  Greg Badros  <gjb@cs.washington.edu>

	* Fixed bug whereby a dummy variable was being pivoted into the
	basis because pexpr->anyVariable() didn't guarantee the variable
	it returned was a pivotable variable -- now it's called
	anyPivotableVariable(), and does the right thing.

	* Fixed bug whereby column mappings that had no rows remained in
	the list of columns -- now erase the column key when its value is
	the empty set

	* Fixed bug whereby constraints that threw required failure
	exceptions remained in the tableau (a removeConstraint on a
	constraint that failed to be added used to succeed, now it does
	not)

Monday Jun 29 16:50:00 1998  Greg Badros  <gjb@cs.washington.edu>

	* Cassowary v0.1 is released  --- see local/POST-ANNOUNCE-TO for
	list of places where it was announced

